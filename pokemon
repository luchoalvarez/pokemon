PokemonList.js
import React, { useState, useEffect } from 'react';
import { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonItem, IonThumbnail, IonLabel, IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/react';
import axios from 'axios';
import { useHistory } from 'react-router-dom';

const PokemonList = () => {
  const [pokemons, setPokemons] = useState([]);
  const [offset, setOffset] = useState(0);
  const limit = 20;
  const history = useHistory();

  useEffect(() => {
    fetchPokemons();
  }, []);

  const fetchPokemons = async (event) => {
    try {
      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`);
      const newPokemons = response.data.results.map((pokemon, index) => ({
        name: pokemon.name,
        image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${offset + index + 1}.png`,
        id: offset + index + 1,
      }));
      setPokemons((prev) => [...prev, ...newPokemons]);
      setOffset((prevOffset) => prevOffset + limit);
    } catch (error) {
      console.error('Error fetching Pokémon:', error);
    }
    if (event) event.target.complete();
  };

  return (
    <IonPage>
      <IonHeader>
        <IonToolbar>
          <IonTitle>Pokémon List</IonTitle>
        </IonToolbar>
      </IonHeader>
      <IonContent>
        <IonList>
          {pokemons.map((pokemon) => (
            <IonItem key={pokemon.id} button onClick={() => history.push(`/pokemon/${pokemon.id}`)}>
              <IonThumbnail slot="start">
                <img src={pokemon.image} alt={pokemon.name} />
              </IonThumbnail>
              <IonLabel>{pokemon.name}</IonLabel>
            </IonItem>
          ))}
        </IonList>
        <IonInfiniteScroll threshold="100px" onIonInfinite={fetchPokemons}>
          <IonInfiniteScrollContent loadingText="Loading more Pokémon..." />
        </IonInfiniteScroll>
      </IonContent>
    </IonPage>
  );
};

export default PokemonList;

// src/pages/PokemonDetails.js
import React, { useState, useEffect } from 'react';
import { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardHeader, IonCardTitle, IonCardContent } from '@ionic/react';
import { useParams } from 'react-router-dom';
import axios from 'axios';

const PokemonDetails = () => {
  const { id } = useParams();
  const [pokemon, setPokemon] = useState(null);

  useEffect(() => {
    fetchPokemonDetails();
  }, []);

  const fetchPokemonDetails = async () => {
    try {
      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);
      const data = response.data;
      setPokemon({
        name: data.name,
        image: data.sprites.front_default,
        height: data.height,
        weight: data.weight,
        types: data.types.map((type) => type.type.name),
        stats: data.stats.map((stat) => ({ name: stat.stat.name, value: stat.base_stat })),
      });
    } catch (error) {
      console.error('Error fetching Pokémon details:', error);
    }
  };

  return (
    <IonPage>
      <IonHeader>
        <IonToolbar>
          <IonTitle>{pokemon?.name || 'Loading...'}</IonTitle>
        </IonToolbar>
      </IonHeader>
      <IonContent>
        {pokemon && (
          <IonCard>
            <img src={pokemon.image} alt={pokemon.name} />
            <IonCardHeader>
              <IonCardTitle>{pokemon.name}</IonCardTitle>
            </IonCardHeader>
            <IonCardContent>
              <p><strong>Height:</strong> {pokemon.height}</p>
              <p><strong>Weight:</strong> {pokemon.weight}</p>
              <p><strong>Types:</strong> {pokemon.types.join(', ')}</p>
              <h3>Base Stats:</h3>
              <ul>
                {pokemon.stats.map((stat) => (
                  <li key={stat.name}>{stat.name}: {stat.value}</li>
                ))}
              </ul>
            </IonCardContent>
          </IonCard>
        )}
      </IonContent>
    </IonPage>
  );
};

export default PokemonDetails;
